name: Build IPK

on:
  push:
    branches:
      - master
    paths:
      - 'luci-app-coovachilli/Makefile'
  workflow_dispatch:

jobs:
  build:
    name: Build IPK
    runs-on: ubuntu-latest

    steps:
      - name: üîÑ Checkout repository
        uses: actions/checkout@v4

      - name: üõ†Ô∏è Set up build environment
        run: |
          echo -e "\033[34müî® Preparing build environment \033[0m"
          sudo -E apt-get update > /dev/null 2>&1
          sudo -E apt-get install build-essential clang flex bison g++ gawk gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev python3-setuptools rsync swig unzip zlib1g-dev file wget > /dev/null 2>&1
          sudo -E apt-get autoremove --purge > /dev/null 2>&1
          sudo -E apt-get clean > /dev/null 2>&1
          
          echo -e "\033[34müîß Configuring environment \033[0m"
          PKG_NAME=luci-app-coovachilli
          PKG_VERSION=$(grep 'PKG_VERSION:=' $PKG_NAME/Makefile | awk -F '=' '{print $2}' | tr -d ' ')
          export TERM=xterm
          echo "PKG_VERSION=$PKG_VERSION" >> $GITHUB_ENV
          echo "PKG_NAME=$PKG_NAME" >> $GITHUB_ENV
          echo -e "\033[34m\tüì¶ PKG_NAME:\033[37m $PKG_NAME \033[0m"
          echo -e "\033[34m\tüîñ PKG_VERSION:\033[37m $PKG_VERSION \033[0m"
          echo -e "\033[34m\tüíª TERM:\033[37m xterm \033[0m"

      - name: üì¶ Set up resources
        run: |
          echo -e "\033[34müóÇÔ∏è Downloading SDK OpenWRT \033[0m"
          curl -s -L https://downloads.openwrt.org/releases/23.05.5/targets/x86/64/openwrt-sdk-23.05.5-x86-64_gcc-12.3.0_musl.Linux-x86_64.tar.xz -o sdk.tar.xz
          mkdir sdk && tar -xf sdk.tar.xz -C sdk --strip-components=1

          echo -e "\033[34müì¶ Cloning $PKG_NAME package \033[0m"
          git clone -q https://github.com/${{ github.repository }} sdk/package/tmp
          mv sdk/package/tmp/${PKG_NAME} sdk/package/
          rm -rf sdk/package/tmp
            
      - name: ‚öôÔ∏è Configure & compile IPK
        env:
          PKG_NAME: ${{ env.PKG_NAME }}
        run: |
          echo "üîß Configuring SDK"
          cd sdk
          ./scripts/feeds update -a
          ./scripts/feeds install -a

          make defconfig
          rm -rf feeds/luci/contrib/package/csstidy
          sed -i '/^CONFIG_LUCI_JSMIN=/d' .config
          sed -i '/^CONFIG_LUCI_CSSTIDY=/d' .config

          echo "üî® Compiling ${PKG_NAME} package"
          make package/${PKG_NAME}/{clean,compile} -j$(nproc) V=s

      - name: üöÄ Generate new tag & release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ env.PKG_NAME }}
          tag_name: ${{ env.PKG_VERSION }}
          draft: false
          prerelease: false
          files: ${{ env.PKG_PATH }}
          body: |
            ### V ${{ env.PKG_VERSION }}
